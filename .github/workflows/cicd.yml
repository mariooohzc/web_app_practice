name: Push Docker Image

on:
  push:
    branches: main
    paths:
      - .github/workflows/build.yml
      - .dockerignore
      - Dockerfile.build
      - poetry.lock
      - pyproject.toml
      - '**.py'
      - '**.html'

permissions:
  packages: write

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.6
        with:
          show-progress: false

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3.3.0

      - name: Log in to the Container registry
        uses: docker/login-action@v3.2.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        uses: docker/metadata-action@v5.5.1
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5.3.0
        with:
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          file: Dockerfile
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.1.7
      with:
        show-progress: false

    - name: Deploy
      # Only run this step if the branch is main
      if: github.ref == 'refs/heads/main'
      env:
        deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
      run: |
        curl "$deploy_url"

    # - name: Deploy to production
    #   uses: johnbeynon/render-deploy-action@v0.0.8
    #   with:
    #     service-id: ${{ secrets.MY_RENDER_SERVICE_ID }}
    #     api-key: ${{ secrets.MY_RENDER_API_KEY }}

    
